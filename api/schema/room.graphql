type Room implements Node {
  id: ID! @goField(forceResolver: true)
  name: String!
  bgColor: String!
  bgUrl: String!
  createdAt: Time!
  totalUserCount: Int! @goField(forceResolver: true)
  totalMessageCount: Int! @goField(forceResolver: true)
  messages(last: Int, before: String): MessageConnection! @goField(forceResolver: true)
  users: [RoomUser!]! @goField(forceResolver: true)
}

type RoomEdge implements Edge {
  cursor: String!
  node: Room!
}

type RoomConnection implements Connection {
  pageInfo: PageInfo!
  edges: [RoomEdge!]!
  nodes: [Room!]!
  roomCount: Int!
}

input CreateRoomInput {
  name: String!
  bgUrl: String
  bgColor: String
}

enum RoomOrderField {
  LATEST
  DESC_USER_COUNT
}

type CreateRoomPayload {
  room: Room!
}
