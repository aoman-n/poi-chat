type Room implements Node {
  id: ID!
  name: String!
}

type RoomEdge implements Edge {
  cursor: String!
  node: Room!
}

type RoomConnection implements Connection {
  pageInfo: PageInfo!
  edges: [RoomEdge]!
  nodes: [Room]!
  roomCount: Int!
}

type RoomDetail implements Node {
  id: ID!
  name: String!
}

input CreateRoomInput {
  name: String!
}

enum RoomOrderField {
  LATEST
  DESC_USER_COUNT
}

extend type Query {
  rooms(first: Int, after: String, orderBy: RoomOrderField): RoomConnection!
  roomDetail(id: ID!): RoomDetail!
}

extend type Mutation {
  createRoom(input: CreateRoomInput): Room!
}

extend type Subscription {
  subMessage(roomId: ID!): Message!
}