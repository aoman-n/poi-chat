extend type Room {
  # 最新のメッセージから順に取得
  messages(last: Int, before: String): MessageConnection!
}

extend type Mutation {
  sendMessage(input: SendMessageInput): SendMassagePaylaod!
}

type SendMassagePaylaod {
  message: Message!
}

type Message implements Node {
  id: ID!
  userId: ID!
  userName: String!
  userAvatarUrl: String!
  body: String!
  createdAt: Time!
}

type MessageEdge implements Edge {
  cursor: String!
  node: Message!
}

type MessageConnection implements Connection {
  pageInfo: PageInfo!
  edges: [MessageEdge!]!
  nodes: [Message!]!
  messageCount: Int!
}

input SendMessageInput {
  roomID: ID!
  body: String!
}
